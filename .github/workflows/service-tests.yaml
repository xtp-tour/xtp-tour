name: Service Tests

on:
  push:
    branches: [ main ]    
  pull_request:
    branches: [ main ]
    paths:
      - 'api/**'
      - '.github/workflows/service-tests.yaml'
  workflow_dispatch:

jobs:
  service-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    
    services:
      mysql:
        image: mysql:9.3.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: xtp_tour
        ports:
          - 53306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.2'
          check-latest: true

      - name: Download dependencies
        run: go mod download

      - name: Wait for MySQL to be ready
        run: |
          until mysqladmin ping -h 127.0.0.1 -P 53306 -u root --password=password --silent; do
            echo "Waiting for MySQL to be ready..."
            sleep 2
          done
          echo "MySQL is ready!"

      - name: Run database migrations
        env:
          DB_PORT: 53306
        run: go run cmd/server/main.go migrate

      - name: Start server in background
        env:
          AUTH_TYPE: debug
          LOG_LEVEL: debug
          DB_PORT: 53306
          SERVICE_PORT: 58080
          METRICS_PORT: 51025
        run: |
          go run cmd/server/main.go &
          SERVER_PID=$!
          echo "SERVER_PID=$SERVER_PID" >> $GITHUB_ENV
          echo "Server started with PID: $SERVER_PID"
          
      - name: Wait for server to start
        run: |
          echo "Waiting for server to start..."
          sleep 3
          # Check if server is responding
          curl -f http://localhost:58080/api/ping || (echo "Server health check failed" && exit 1)

      - name: Run service tests
        env:
          SERVICE_HOST: http://localhost:58080
          METRICS_HOST: http://localhost:51025
        run: go test ./test/stest -tags servicetest -v -count=1

      - name: Cleanup server process
        if: always()
        run: |
          if [ ! -z "$SERVER_PID" ]; then
            echo "Stopping server with PID: $SERVER_PID"
            kill $SERVER_PID 2>/dev/null || true
          fi 